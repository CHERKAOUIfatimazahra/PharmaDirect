# name: Backend CI/CD

# on:
#   push:
#     branches: [ main ]
#     paths:
#       - 'backend/**'
#   pull_request:
#     branches: [ main ]
#     paths:
#       - 'backend/**'

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: ./backend

#     steps:
#     - uses: actions/checkout@v3

#     - name: Setup Node.js
#       uses: actions/setup-node@v3
#       with:
#         node-version: '18'
#         cache: 'npm'
#         cache-dependency-path: './backend/package-lock.json'

#     - name: Install Dependencies
#       run: npm ci

#     - name: Run Tests
#       run: npm test

#     - name: Run ESLint
#       run: npm run lint

#   build-and-push:
#     needs: test
#     runs-on: ubuntu-latest
#     if: github.event_name == 'push' && github.ref == 'refs/heads/main'

#     steps:
#     - uses: actions/checkout@v3

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2

#     - name: Login to Docker Hub
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_TOKEN }}

#     - name: Build and push Docker image
#       uses: docker/build-push-action@v4
#       with:
#         context: ./backend
#         push: true
#         tags: ${{ secrets.DOCKERHUB_USERNAME }}/pharmadirect-backend:latest
#         cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/pharmadirect-backend:buildcache
#         cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/pharmadirect-backend:buildcache,mode=max

#   deploy:
#     needs: build-and-push
#     runs-on: ubuntu-latest
#     if: github.event_name == 'push' && github.ref == 'refs/heads/main'

#     steps:
#     - name: Deploy to production
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.DEPLOY_HOST }}
#         username: ${{ secrets.DEPLOY_USER }}
#         key: ${{ secrets.DEPLOY_KEY }}
#         script: |
#           cd /opt/pharmadirect
#           docker-compose pull backend
#           docker-compose up -d backend